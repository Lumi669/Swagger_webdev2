swagger: "2.0"
info: 
  title: hessssoloppppppp
  description: building and sensor
  contact:
    name: jinghuan wang
    email: jinghuan.wang@tuni.fi
  version: 1.0.0
servers:
  -url: "http://localhost:4000/"
  description: This is my local servers
  -url: "http://company.com/"
  decription: This is my compnat server
schemes:
  - "http"
  - "https"


#/buildings
paths:
  /buildings:
    description: Bulding info

    #GET
    get:
      summary: Returns all buildings
      responses:
        200:
          description: Sucess Response
          content: application/json
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                name: 
                  type: string
                address:
                  type: object
                  properties:
                    streetAdress: 
                      type: string
                    PostNumber:
                      type: number
        401:
          description: authorization error
        400:
          description: hi, this is a bad request
        

    #POST json/body, note here NOT write '/buildings' again, because above already provided
    post:
      summary: Add a new building
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name: building
        required: true
        schema: 
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            address:
              type: object
              properties: 
                streetAdress:
                  type: string
                PostNumber:
                  type: number

      responses:
        201:
          description: created
        401:
          description: authorization error


#/buildings/buildingID, dynamically meaning id is a parameter
  /buildings/{buildingId}:
    description: One building info

    #GET
    get:
      summary: Return one building
      description: Returning a object
      parameters:
        - name: buildingId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Sucess Response
          schema:
            type: object
            properties: 
              id:
                type: integer
              name:
                type: string
              address:
                type: object
                properties:
                  streetAdress: 
                    type: string
                  PostNumber:
                    type: integer
              
        401:
          description: authorization error
        404:
          description: Not found the building

    #PATCH
    patch:
      summary: Update one building
      produces:
          - application/json
      consumes:
          - application/json
      parameters:
        - name: buildingId
          in: path
          required: true
          type: integer
        - name: building name
          in: body
          schema:
            type: object
            properties: 
              buildingName: 
                type: string

          required: true
      responses:
        204:
          description: Sucess updated
          
        401:
          description: authorization error


#Sensor

  /buildings/{buildingId}/sensors:
      description: get sensors of a building
    
      get:
        summary: Returns all sensor of a building
        parameters:
          - in: path
            name: buildingId
            required: true
            type: integer
          
        responses:
          200:
            description: Sucess Response
            content: application/json
            schema:
              type: array
              items:
                type: string
                
          401:
            description: authorization error
          400:
            description: hi, this is a bad request

#
  /sensors/{state}:
    description: get all sensors with a specific state

    #GET
    get:
      summary: Returns all sensors with a state
      parameters:
        - name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Sucess Response
          content: application/json
          
          schema:
            type: array
            items:
              type: object
              properties:
                id: 
                  type: integer
                name: 
                  type: string
                value:
                  type: number
                  state:
                      type: string
                  
        401:
          description: authorization error
        400:
          description: hi, this is a bad request

          
        
          
          
      



          
    

    